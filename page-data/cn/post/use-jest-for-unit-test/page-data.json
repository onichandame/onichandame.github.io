{"componentChunkName":"component---src-template-blog-tsx","path":"/cn/post/use-jest-for-unit-test","result":{"data":{"mdx":{"frontmatter":{"title":"使用Jest做单元测试","author":"onichandame","date":"2020-06-09T00:00:00.000Z"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"使用Jest做单元测试\",\n  \"author\": \"onichandame\",\n  \"date\": \"2020-06-09T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#%E5%BC%82%E6%AD%A5\"\n  }, \"\\u5F02\\u6B65\"))), mdx(\"p\", null, \"\\u81EA\\u52A8\\u5316 CI/CD \\u5DE5\\u4F5C\\u6D41\\u4E2D\\uFF0C\\u5355\\u5143\\u6D4B\\u8BD5\\u662F\\u5FC5\\u9700\\u9879\\u3002\\u8FD9\\u91CC\\u6211\\u8BB0\\u5F55\\u4E00\\u4E9B\\u4F7F\\u7528 Jest \\u65F6\\u53D1\\u73B0\\u7684\\u96BE\\u70B9\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"describe(\\\"module 1\\\", () => {\\n  test(\\\"dances\\\", () => expect(module1.dance()).toBeTruthy())\\n})\\n\")), mdx(\"h1\", null, \"\\u5F02\\u6B65\"), mdx(\"p\", null, \"Jest \\u5E76\\u884C\\u5904\\u7406\\u6240\\u6709\\u5355\\u5143\\u6D4B\\u8BD5\\uFF0C\\u56E0\\u6B64\\u6BCF\\u4E2A\\u6D4B\\u8BD5\\u90FD\\u8981\\u63D0\\u4F9B\\u4E00\\u4E2A\\u660E\\u786E\\u7684\\u7EC8\\u6B62\\u7B26\\u3002\\u5982\\u679C\\u4EE3\\u7801\\u5168\\u662F\\u540C\\u6B65\\u7684\\uFF0C\\u53EA\\u9700\\u8981\\u4ECE\\u6D4B\\u8BD5 callback \\u4E2D\\u8FD4\\u56DE\\u4E00\\u4E2A expect \\u5373\\u53EF\\u901A\\u77E5 Jest \\u6D4B\\u8BD5\\u4F55\\u65F6\\u7ED3\\u675F\\u3002\"), mdx(\"p\", null, \"\\u95EE\\u9898\\u51FA\\u73B0\\u5728\\u6D4B\\u8BD5 callback \\u662F\\u5F02\\u6B65\\u65F6\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"describe(\\\"module 1\\\", () => {\\n  test(\\\"dances\\\", async () => expect(module1.dance()).toBeTruthy())\\n})\\n\")), mdx(\"p\", null, \"\\u4E0A\\u9762\\u7684\\u6D4B\\u8BD5\\u4EE3\\u7801\\u5728\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"module1.dance()\"), \"\\u662F\\u540C\\u6B65\\u65F6\\u6709\\u6548\\u3002\\u4F46\\u5F53 resolved value \\u9700\\u8981\\u6D4B\\u8BD5\\u65F6\\u53C8\\u5982\\u4F55\\uFF1F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"describe(\\\"module 1\\\", () => {\\n  test(\\\"dances\\\", async () => expect(await module1.dance()).toBeTruthy())\\n})\\n\")), mdx(\"p\", null, \"\\u4E0A\\u9762\\u7684\\u6D4B\\u8BD5\\u4EE3\\u7801\\u662F\\u5BF9\\u7B80\\u5355\\u95EE\\u9898\\u7684\\u7B80\\u5355\\u56DE\\u7B54\\u3002\\u4F46\\u5F53\\u95EE\\u9898\\u53D8\\u5F97\\u66F4\\u590D\\u6742\\u65F6\\u53C8\\u5982\\u4F55\\uFF1F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"describe(\\\"module 1\\\", done => {\\n  test(\\\"dances\\\", async () => {\\n    expect.assertions(1)\\n    const dance = await module1.dance()\\n    dance.on(\\\"spin\\\", speed => {\\n      expect(speed).toBeGreaterThan(5)\\n      done()\\n    })\\n  })\\n})\\n\")), mdx(\"p\", null, \"\\u4E0A\\u9762\\u7684\\u6D4B\\u8BD5\\u4EE3\\u7801\\u662F\\u4F53\\u73B0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"done\"), \"\\u65B9\\u6CD5\\u7528\\u5904\\u7684\\u6848\\u4F8B\\u3002\\u6D4B\\u8BD5\\u5728\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"done\"), \"\\u88AB\\u547C\\u53EB\\u65F6\\u7ED3\\u675F\\u3002\\u53E6\\u4E00\\u4E2A\\u4F8B\\u5B50\\u662F\\u5728\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"beforeAll\"), \"\\u4E2D\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"beforeAll(async done => {\\n  await dep1\\n  await dep2\\n  done()\\n})\\n\")), mdx(\"p\", null, \"\\u4E0D\\u9002\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"done\"), \"\\u65F6\\uFF0CJest \\u4F1A\\u540C\\u6B65\\u5F0F\\u6267\\u884C callback\\uFF0C\\u56E0\\u6B64\\u6D4B\\u8BD5\\u4EE3\\u7801\\u5C06\\u5728\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dep1\"), \"\\u548C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dep2\"), \" resolved \\u4E4B\\u524D\\u5F00\\u59CB\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"异步","depth":1}]}},"pageContext":{"locale":"cn","type":"post","title":"使用Jest做单元测试","date":"2020-06-09T00:00:00.000Z","author":"onichandame"}},"staticQueryHashes":["440568431","840944156","899237799","899237799"]}