{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/template/resume.tsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","Post","data","locale","pageContext","author","useTranslation","title","lang","container","direction","spacing","alignItems","item","variant","headings","body","query"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,kIAsCeS,UAjBS,SAAC,GAA+C,IAArCf,EAAqC,EAA7CgB,KAAQhB,IAAsBiB,EAAe,EAA9BC,YAAeD,OAC/CE,EAAWC,cAAXD,OACR,OACE,oCACE,kBAAC,IAAD,CAAKE,MAAOF,EAAQG,KAAML,IAC1B,kBAAC,IAAD,CAAMM,WAAS,EAACC,UAAW,SAAUC,QAAS,EAAGC,WAAY,UAC3D,kBAAC,IAAD,CAAMC,MAAI,GACR,kBAAC,IAAD,CAAYC,QAAS,MAAOT,IAE9B,kBAAC,IAAD,CAAMQ,MAAI,GACR,kBAAC,cAAD,CAAaE,SAAU7B,EAAI6B,UAAW7B,EAAI8B,UAS7C,IAAMC,EAAQ","file":"component---src-template-resume-tsx-52fd3ffeb5c949b46b9c.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React, { FC } from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { Grid, Typography } from \"@material-ui/core\"\n\nimport { useTranslation } from \"../i18n\"\nimport { SEO } from \"../components/SEO\"\n\ntype Props = PageProps<\n  {\n    mdx: {\n      body: string\n      headings: string[]\n    }\n  },\n  {\n    name: string\n    locale: string\n  }\n>\n\nconst Post: FC<Props> = ({ data: { mdx }, pageContext: { locale } }) => {\n  const { author } = useTranslation()\n  return (\n    <>\n      <SEO title={author} lang={locale} />\n      <Grid container direction={\"column\"} spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <Typography variant={\"h3\"}>{author}</Typography>\n        </Grid>\n        <Grid item>\n          <MDXRenderer headings={mdx.headings}>{mdx.body}</MDXRenderer>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Post\n\nexport const query = graphql`\n  query Resume($locale: String!, $type: String!) {\n    mdx(fields: { type: { eq: $type }, locale: { eq: $locale } }) {\n      body\n      headings {\n        value\n        depth\n      }\n    }\n  }\n`\n"],"sourceRoot":""}