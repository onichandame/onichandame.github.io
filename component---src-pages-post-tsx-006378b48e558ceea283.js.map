{"version":3,"sources":["webpack:///./src/utils/dateFormat.ts","webpack:///./src/pages/post.tsx","webpack:///./src/components/Blog/Entry.tsx","webpack:///./src/components/Blog/BlogList.tsx"],"names":["dateFormat","date","Date","getFullYear","getMonth","getDate","BlogPage","allMdx","data","locale","pageContext","title","lang","posts","edges","map","post","node","frontmatter","author","slug","parent","relativeDirectory","Entry","Grid","container","direction","item","Typography","variant","justify","BlogList","useContext","LocaleContext","List","other","ListItem","button","onClick","navigate","localize"],"mappings":"+HAEO,IAAMA,EAAa,SAACC,GAEzB,OADAA,EAAO,IAAIC,KAAKD,IACDE,cAAf,KAAgCF,EAAKG,WAAa,GAAlD,IAAuDH,EAAKI,Y,kCCJ9D,wDA0BeC,UAnBqB,SAAC,GAG/B,IAFIC,EAEJ,EAFJC,KAAQD,OACOE,EACX,EADJC,YAAeD,OAEf,OACE,oCACE,kBAAC,IAAD,CAAKE,MAAO,QAASC,KAAMH,IAC3B,kBAAC,IAAD,CACEI,MAAON,EAAOO,MAAMC,KAAI,gBAASC,EAAT,EAAGC,KAAH,MAAqB,CAC3CN,MAAOK,EAAKE,YAAYP,MACxBV,KAAMe,EAAKE,YAAYjB,KACvBkB,OAAQH,EAAKE,YAAYC,OACzBC,KAAMJ,EAAKK,OAAOC,2B,6LCRfC,EAAmB,SAAC,GAA4B,IAA1BZ,EAA0B,EAA1BA,MAAOQ,EAAmB,EAAnBA,OAAQlB,EAAW,EAAXA,KAChD,OACE,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAW,UACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYC,QAAS,MAAOlB,IAE9B,kBAACa,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAW,MAAOI,QAAS,iBACzC,kBAACN,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYC,QAAS,aAAcV,IAErC,kBAACK,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYC,QAAS,aAAc7B,YAAWC,SCb7C8B,EAAsB,SAAC,GAAc,IAAZlB,EAAY,EAAZA,MAC9BJ,EAASuB,qBAAWC,KAC1B,OACE,kBAACC,EAAA,EAAD,KACGrB,EAAME,KAAI,gBAAGK,EAAH,EAAGA,KAASe,EAAZ,+BACT,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,kBAAMC,mBAASC,YAAS/B,EAAD,SAAkBW,MAElD,kBAAC,EAAUe","file":"component---src-pages-post-tsx-006378b48e558ceea283.js","sourcesContent":["type Props = Date | string | number\n\nexport const dateFormat = (date: Props) => {\n  date = new Date(date)\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n}\n","import React, { FC } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { BlogPageProps } from \"../types\"\nimport { SEO } from \"../components/SEO\"\nimport { BlogList } from \"../components/Blog\"\n\nconst BlogPage: FC<BlogPageProps> = ({\n  data: { allMdx },\n  pageContext: { locale }\n}) => {\n  return (\n    <>\n      <SEO title={\"Blogs\"} lang={locale} />\n      <BlogList\n        posts={allMdx.edges.map(({ node: post }) => ({\n          title: post.frontmatter.title,\n          date: post.frontmatter.date,\n          author: post.frontmatter.author,\n          slug: post.parent.relativeDirectory\n        }))}\n      />\n    </>\n  )\n}\n\nexport default BlogPage\n\nexport const query = graphql`\n  query To($locale: String!) {\n    allMdx(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { fields: { locale: { eq: $locale }, type: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            author\n            date\n          }\n          fields {\n            name\n            locale\n          }\n          parent {\n            ... on File {\n              relativeDirectory\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { FC } from \"react\"\nimport { Grid, Typography } from \"@material-ui/core\"\n\nimport { dateFormat } from \"../../utils\"\n\ntype Props = {\n  title: string\n  author: string\n  date: string | Date | number\n}\n\nexport const Entry: FC<Props> = ({ title, author, date }) => {\n  return (\n    <Grid container direction={\"column\"}>\n      <Grid item>\n        <Typography variant={\"h6\"}>{title}</Typography>\n      </Grid>\n      <Grid item>\n        <Grid container direction={\"row\"} justify={\"space-between\"}>\n          <Grid item>\n            <Typography variant={\"subtitle1\"}>{author}</Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant={\"subtitle1\"}>{dateFormat(date)}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React, { FC, ComponentProps, useContext } from \"react\"\nimport { navigate } from \"gatsby\"\nimport { List, ListItem } from \"@material-ui/core\"\n\nimport { localize, LocaleContext } from \"../../i18n\"\nimport { Entry } from \"./Entry\"\n\ntype Props = {\n  posts: Array<{ slug: string } & ComponentProps<typeof Entry>>\n}\nexport const BlogList: FC<Props> = ({ posts }) => {\n  const locale = useContext(LocaleContext)\n  return (\n    <List>\n      {posts.map(({ slug, ...other }) => (\n        <ListItem\n          button\n          onClick={() => navigate(localize(locale, `/post/${slug}`))}\n        >\n          <Entry {...other} />\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n"],"sourceRoot":""}