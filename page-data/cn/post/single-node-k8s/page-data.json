{"componentChunkName":"component---src-template-blog-tsx","path":"/cn/post/single-node-k8s","result":{"data":{"mdx":{"frontmatter":{"title":"国内安装单node k8s集群","author":"onichandame","date":"2020-04-07T00:00:00.000Z"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"国内安装单node k8s集群\",\n  \"author\": \"onichandame\",\n  \"date\": \"2020-04-07T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%9C%BA%E6%99%AF\"\n  }), \"\\u573A\\u666F\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E6%9D%90%E6%96%99\"\n  }), \"\\u6750\\u6599\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E8%BF%87%E7%A8%8B\"\n  }), \"\\u8FC7\\u7A0B\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%AE%89%E8%A3%85os\"\n  }), \"\\u5B89\\u88C5 OS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%BC%80%E5%90%AF%E9%98%B2%E7%81%AB%E5%A2%99%E7%AB%AF%E5%8F%A3\"\n  }), \"\\u5F00\\u542F\\u9632\\u706B\\u5899\\u7AEF\\u53E3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%BC%80%E5%90%AF%E7%BD%91%E7%BB%9C%E6%A1%A5%E6%8E%A5\"\n  }), \"\\u5F00\\u542F\\u7F51\\u7EDC\\u6865\\u63A5\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%AE%89%E8%A3%85container%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83\"\n  }), \"\\u5B89\\u88C5 container \\u8FD0\\u884C\\u73AF\\u5883\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%AE%89%E8%A3%85kubectlkubeletkubeadm\"\n  }), \"\\u5B89\\u88C5 kubectl\\u3001kubelet\\u3001kubeadm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%90%AF%E5%8A%A8\"\n  }), \"\\u542F\\u52A8\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E9%85%8D%E7%BD%AEkubectl\"\n  }), \"\\u914D\\u7F6E kubectl\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%AE%89%E8%A3%85%E7%BD%91%E7%BB%9C%E6%8F%92%E4%BB%B6\"\n  }), \"\\u5B89\\u88C5\\u7F51\\u7EDC\\u63D2\\u4EF6\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%85%B3%E9%97%ADmaster%E4%BF%9D%E6%8A%A4\"\n  }), \"\\u5173\\u95ED master \\u4FDD\\u62A4\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%AE%89%E8%A3%85load-balancer\"\n  }), \"\\u5B89\\u88C5 Load Balancer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E5%AE%89%E8%A3%85ingress-controller\"\n  }), \"\\u5B89\\u88C5 Ingress Controller\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#%E7%BB%93%E8%AF%AD\"\n  }), \"\\u7ED3\\u8BED\"))), mdx(\"h1\", {\n    \"id\": \"场景\"\n  }, \"\\u573A\\u666F\"), mdx(\"p\", null, \"\\u6211\\u7684\\u65B0\\u9879\\u76EE\\u9700\\u8981\\u5728\\u4E00\\u53F0\\u8DDD\\u79BB\\u529E\\u516C\\u5730\\u70B9\\u6BD4\\u8F83\\u8FDC\\u7684\\u7684\\u7269\\u7406\\u673A\\u4E0A\\u8FD0\\u884C\\uFF0C\\u4E14\\u9879\\u76EE\\u672C\\u8EAB\\u6BD4\\u8F83\\u590D\\u6742\\uFF0C\\u6709\\u5F88\\u591A\\u5FAE\\u670D\\u52A1\\u3002\\u56E0\\u6B64 container orchestration \\u662F\\u6700\\u597D\\u7684\\u90E8\\u7F72\\u65B9\\u5F0F\\u3002\\u4F46\\u56FD\\u5185\\u90E8\\u7F72+k8s+\\u7269\\u7406\\u673A\\u7684\\u9650\\u5236\\u8BA9\\u90E8\\u7F72\\u521D\\u671F\\u7684\\u8BBE\\u7F6E\\u975E\\u5E38\\u590D\\u6742\\u3002\"), mdx(\"h1\", {\n    \"id\": \"材料\"\n  }, \"\\u6750\\u6599\"), mdx(\"p\", null, \"\\u4E0A\\u8FF0\\u573A\\u666F\\u63D0\\u4F9B\\u7684\\u6750\\u6599\\u6709\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u4E00\\u53F0\\u670D\\u52A1\\u5668\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CPU\\uFF1AE3-1220v6\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"RAM\\uFF1A32GB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HDD\\uFF1A4TB\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u4E00\\u6BB5 LAN \\u4E2D\\u7684\\u7A7A\\u95F2 IP \\u6BB5\")), mdx(\"h1\", {\n    \"id\": \"过程\"\n  }, \"\\u8FC7\\u7A0B\"), mdx(\"h2\", {\n    \"id\": \"安装-os\"\n  }, \"\\u5B89\\u88C5 OS\"), mdx(\"p\", null, \"\\u6211\\u5B89\\u88C5\\u7684\\u662F\\u6700\\u65B0\\u7248 CentOS 7\\uFF0C\\u56E0\\u4E3A CentOS 8 \\u5BF9 docker \\u7684\\u652F\\u6301\\u8FD8\\u4E0D\\u5B8C\\u5584\\u3002\\u4E0D\\u4F7F\\u7528 docker \\u548C containerd \\u7684\\u8BDD\\u53EF\\u4EE5\\u7528 CentOS 8\\u3002\\u5176\\u4ED6\\u53D1\\u884C\\u7248\\u6211\\u4E0D\\u719F\\u6089\\uFF0C\\u5728\\u6B64\\u4E0D\\u505A\\u63A8\\u8350\\u3002\"), mdx(\"h2\", {\n    \"id\": \"开启防火墙端口\"\n  }, \"\\u5F00\\u542F\\u9632\\u706B\\u5899\\u7AEF\\u53E3\"), mdx(\"p\", null, \"\\u6839\\u636E\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/\"\n  }), \"\\u5B98\\u65B9\\u6587\\u6863\"), \"\\uFF0Cmaster \\u548C worker \\u9700\\u8981\\u7684\\u9632\\u706B\\u5899\\u7AEF\\u53E3\\u5171\\u6709 7 \\u4E2A\\u548C 1 \\u6BB5\\u3002\\u53E6\\u5916\\u6839\\u636E\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network\"\n  }), \"\\u6587\\u6863\"), \"\\uFF0C\\u8981\\u4F7F\\u7528 flannel \\u8FD8\\u9700\\u8981\\u5F00\\u653E 2 \\u4E2A\\u7AEF\\u53E3\\u3002\\u518D\\u6839\\u636E\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-manifests/\"\n  }), \"\\u6587\\u6863\"), \"\\uFF0C80 \\u548C 443 \\u7AEF\\u53E3\\u9700\\u8981\\u5F00\\u653E\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"firewall-cmd --zone=public --permanent --add-port=443/tcp\\nfirewall-cmd --zone=public --permanent --add-port=80/tcp\\nfirewall-cmd --zone=public --permanent --add-port=6443/tcp\\nfirewall-cmd --zone=public --permanent --add-port=2379-2380/tcp\\nfirewall-cmd --zone=public --permanent --add-port=10250-10252/tcp\\nfirewall-cmd --zone=public --permanent --add-port=8285/tcp\\nfirewall-cmd --zone=public --permanent --add-port=8472/tcp\\nfirewall-cmd --reload\\n\")), mdx(\"h2\", {\n    \"id\": \"开启网络桥接\"\n  }, \"\\u5F00\\u542F\\u7F51\\u7EDC\\u6865\\u63A5\"), mdx(\"p\", null, \"\\u6839\\u636E\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/\"\n  }), \"\\u5B98\\u65B9\\u6587\\u6863\"), \"\\uFF0C\\u9996\\u5148\\u6253\\u5F00\\u7F51\\u7EDC\\u6865\\u529F\\u80FD\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cat <<EOF > /etc/sysctl.d/k8s.conf\\nnet.bridge.bridge-nf-call-ip6tables = 1\\nnet.bridge.bridge-nf-call-iptables = 1\\nEOF\\nsysctl --system\\n\")), mdx(\"p\", null, \"\\u6CE8\\u610F\\uFF1A\\u5728\\u6B64\\u6B65\\u9AA4\\u4E4B\\u524D\\u5148\\u786E\\u8BA4\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lsmod | grep br_netfilter\"), \"\\u7684\\u8F93\\u51FA\\u975E\\u7A7A\\u3002\\u5982\\u679C\\u662F\\u7A7A\\uFF0C\\u9700\\u8981\\u6267\\u884C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"modprobe br_netfilter\"), \"\\u7136\\u540E\\u518D\\u786E\\u8BA4\\u3002\"), mdx(\"h2\", {\n    \"id\": \"安装-container-运行环境\"\n  }, \"\\u5B89\\u88C5 container \\u8FD0\\u884C\\u73AF\\u5883\"), mdx(\"p\", null, \"\\u6211\\u9009\\u62E9\\u7684\\u662F docker\\uFF0C\\u5177\\u4F53\\u6B65\\u9AA4\\u5728\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker\"\n  }), \"\\u6B64\\u5904\"), \"\\uFF0C\\u4F46\\u6211\\u7684\\u64CD\\u4F5C\\u4F9D\\u636E\\u7684\\u662F centos \\u5B98\\u65B9\\u63A8\\u8350\\u3002\\u5982\\u679C\\u7528 containerd \\u6216\\u8005 cri-o \\u8BF7\\u53C2\\u89C1\\u5B98\\u65B9\\u6559\\u7A0B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yum install epel-release -y\\nyum install docker-ce -y\\n\")), mdx(\"h2\", {\n    \"id\": \"安装-kubectl、kubelet、kubeadm\"\n  }, \"\\u5B89\\u88C5 kubectl\\u3001kubelet\\u3001kubeadm\"), mdx(\"p\", null, \"\\u63A5\\u4E0B\\u6765\\u662F\\u5B89\\u88C5\\u90E8\\u7F72\\u5DE5\\u5177\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cat <<EOF > /etc/yum.repos.d/kubernetes.repo\\n[kubernetes]\\nname=Kubernetes\\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch\\nenabled=1\\ngpgcheck=1\\nrepo_gpgcheck=1\\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\\nexclude=kubelet kubeadm kubectl\\nEOF\\n\\n# Set SELinux in permissive mode (effectively disabling it)\\nsetenforce 0\\nsed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config\\n\\nyum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes\\n\\nsystemctl enable --now kubelet\\n\")), mdx(\"p\", null, \"\\u73B0\\u5728 kubelet \\u5DF2\\u7ECF\\u5B89\\u88C5\\u5B8C\\u6210\\u5E76\\u8FD0\\u884C\\u3002\\u63A5\\u4E0B\\u6765\\u9700\\u8981\\u542F\\u52A8\\u96C6\\u7FA4\\u3002\"), mdx(\"h2\", {\n    \"id\": \"启动\"\n  }, \"\\u542F\\u52A8\"), mdx(\"p\", null, \"\\u5B8C\\u6210\\u4E0A\\u8FF0\\u5B89\\u88C5\\u8FC7\\u7A0B\\u540E\\u73B0\\u5728\\u53EF\\u4EE5\\u542F\\u52A8\\u96C6\\u7FA4\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubeadm init --pod-network-cidr=10.244.0.0/16 --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers\\n\")), mdx(\"p\", null, \"\\u7531\\u4E8E\\u6211\\u4F7F\\u7528 flannel\\uFF0C\\u9700\\u8981\\u8BBE\\u5B9A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--pod-network-cidr=10.244.0.0/16\"), \"\\u3002\\u7531\\u4E8E\\u662F\\u5728\\u56FD\\u5185\\u90E8\\u7F72\\uFF0C\\u6240\\u4EE5\\u9700\\u8981\\u4F7F\\u7528\\u955C\\u50CF\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--image-repository registry.cn-hangzhou.aliyuncs.com/google_containers\"), \"\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u4E00\\u6B65\\u7684\\u8F93\\u51FA\\u4E2D\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubeadm join <control-plane-host>:<control-plane-port> --token <token> --discovery-token-ca-cert-hash sha256:<hash>\"), \"\\u7684\\u90E8\\u5206\\u9700\\u8981\\u8BB0\\u4E0B\\u6765\\uFF0C\\u5C06\\u6765\\u52A0\\u5165\\u65B0 node \\u65F6\\u6709\\u7528\\u3002\"), mdx(\"h2\", {\n    \"id\": \"配置-kubectl\"\n  }, \"\\u914D\\u7F6E kubectl\"), mdx(\"p\", null, \"\\u5982\\u679C\\u5F53\\u524D\\u7528\\u6237\\u975E root\\uFF0C\\u9700\\u8981\\u914D\\u7F6E kubectl \\u4EE5\\u8FDE\\u63A5\\u96C6\\u7FA4\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mkdir -p $HOME/.kube\\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\\n\")), mdx(\"p\", null, \"\\u5982\\u679C\\u5F53\\u524D\\u7528\\u6237\\u662F root\\uFF0C\\u5219\\u9700\\u8981\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"export KUBECONFIG=/etc/kubernetes/admin.conf\"), \"\\u3002\"), mdx(\"h2\", {\n    \"id\": \"安装网络插件\"\n  }, \"\\u5B89\\u88C5\\u7F51\\u7EDC\\u63D2\\u4EF6\"), mdx(\"p\", null, \"k8s \\u662F\\u4E3A\\u5206\\u5E03\\u5F0F\\u96C6\\u7FA4\\u8BBE\\u8BA1\\u7684\\uFF0C\\u56E0\\u6B64\\u4E0D\\u540C\\u5BBF\\u4E3B\\u673A\\u4E0A\\u7684 pod \\u4E4B\\u95F4\\u7684 LAN \\u901A\\u4FE1\\u9700\\u8981\\u4E00\\u4E2A\\u7F51\\u7EDC\\u63D2\\u4EF6\\u63D0\\u4F9B\\uFF0C\\u6839\\u636E\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network\"\n  }), \"\\u6587\\u6863\"), \"\\uFF0C\\u6211\\u9009\\u62E9\\u4F7F\\u7528 flannel\\u3002\\u56E0\\u4E3A\\u5176\\u5B83\\u7684\\u63D2\\u4EF6\\u6709\\u4EBA\\u62A5\\u544A\\u8FC7\\u51FA\\u73B0 dns \\u95EE\\u9898\\uFF0C\\u5177\\u4F53\\u6765\\u6E90\\u8BB0\\u4E0D\\u6E05\\u4E86\\uFF0C\\u4F46\\u540C issue \\u4E0B\\u6709\\u4EBA\\u62A5\\u544A\\u8FC7 flannel \\u6CA1\\u95EE\\u9898\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml\\n\")), mdx(\"h2\", {\n    \"id\": \"关闭-master-保护\"\n  }, \"\\u5173\\u95ED master \\u4FDD\\u62A4\"), mdx(\"p\", null, \"k8s \\u9ED8\\u8BA4\\u4E0D\\u5141\\u8BB8 master \\u8DD1\\u975E system \\u7684 pod\\uFF0C\\u4F46\\u6211\\u7684\\u573A\\u666F\\u5FC5\\u987B\\u5728 master \\u4E0A\\u8DD1 worker \\u7684\\u4EFB\\u52A1\\uFF0C\\u56E0\\u6B64\\u9700\\u8981\\u5173\\u95ED\\u6B64\\u4FDD\\u62A4\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl taint nodes --all node-role.kubernetes.io/master-\\n\")), mdx(\"h2\", {\n    \"id\": \"安装-load-balancer\"\n  }, \"\\u5B89\\u88C5 Load Balancer\"), mdx(\"p\", null, \"\\u5728 Cloud \\u4E0A\\uFF0C\\u6BD4\\u5982 AWS \\u548C GKE\\uFF0Cservice \\u53EF\\u4EE5\\u76F4\\u63A5\\u4F7F\\u7528 LoadBalancer \\u6765\\u83B7\\u53D6\\u5916\\u90E8 ip\\uFF0C\\u4F46\\u6B64\\u529F\\u80FD\\u4F9D\\u8D56\\u4E8E Cloud Provider \\u7684 load balancer\\u3002\\u73B0\\u5728\\u9700\\u8981\\u5B89\\u88C5\\u4E00\\u4E2A load balancer\\u3002\\u6211\\u9009\\u62E9 MetalLB\\uFF0C\\u5B98\\u65B9\\u6587\\u6863\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://metallb.universe.tf/installation/\"\n  }), \"\\u5728\\u6B64\"), \"\\u3002\"), mdx(\"p\", null, \"\\u5148\\u7F16\\u8F91 kube-proxy \\u7684\\u914D\\u7F6E\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl edit configmap -n kube-system kube-proxy\\n\")), mdx(\"p\", null, \"\\u5728\\u5176\\u4E2D\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ipvs\"), \"\\u9879\\u4E0B\\u52A0\\u5165\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"strictARP: true\")), mdx(\"p\", null, \"\\u6B64\\u8BBE\\u7F6E\\u7684\\u539F\\u7406\\u8FD8\\u6CA1\\u5F7B\\u5E95\\u5F04\\u660E\\u767D\\uFF0C\\u4F46\\u731C\\u6D4B\\u4E0E arp \\u7684\\u5E95\\u5C42\\u673A\\u5236\\u6709\\u5173\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u53EF\\u4EE5\\u90E8\\u7F72 MetalLB \\u670D\\u52A1\\u4E86\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl apply -f https://raw.githubusercontent.com/google/metallb/v0.9.3/manifests/namespace.yaml\\nkubectl apply -f https://raw.githubusercontent.com/google/metallb/v0.9.3/manifests/metallb.yaml\\nkubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\\\"$(openssl rand -base64 128)\\\"\\n\")), mdx(\"p\", null, \"\\u73B0\\u5728\\u53EF\\u4EE5\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl get pods --all-namespaces\"), \"\\u68C0\\u67E5 MetalLB \\u76F8\\u5173\\u5BB9\\u5668\\u662F\\u5426\\u6B63\\u5E38\\u5728\\u7EBF\\u3002\"), mdx(\"p\", null, \"\\u63A5\\u4E0B\\u6765\\u9700\\u8981\\u914D\\u7F6E MetalLB\\uFF0C\\u7B80\\u5355\\u6765\\u8BF4\\u5C31\\u662F\\u544A\\u8BC9 MetalLB \\u6709\\u54EA\\u4E9B ip \\u5730\\u5740\\u53EF\\u4EE5\\u5206\\u914D\\u7ED9 service\\u3002\"), mdx(\"p\", null, \"\\u6253\\u5F00\\u4E00\\u4E2A\\u65B0\\u7684 yaml \\u6587\\u4EF6\\uFF0C\\u52A0\\u5165\\u5185\\u5BB9\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"apiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  namespace: metallb-system\\n  name: config\\ndata:\\n  config: |\\n    address-pools:\\n    - name: default\\n      protocol: layer2\\n      addresses:\\n      - 192.168.1.240-192.168.1.250\\n\")), mdx(\"p\", null, \"\\u5176\\u4E2D addresses \\u9879\\u662F\\u53EF\\u7528 ip \\u5730\\u5740\\u7684\\u914D\\u7F6E\\u9879\\uFF0C\\u5176\\u5B83\\u9879\\u4E0D\\u9700\\u8981\\u6539\\u52A8\\u3002\"), mdx(\"p\", null, \"\\u5B8C\\u6210\\u914D\\u7F6E\\u6587\\u4EF6\\u7684\\u4FEE\\u6539\\u540E\\u8FD0\\u884C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl apply -f <\\u914D\\u7F6E\\u6587\\u4EF6>\"), \"\\u5373\\u53EF\\u914D\\u7F6E MetalLB\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u5C31\\u53EF\\u4EE5\\u5C06 LoadBalancer \\u7C7B\\u578B\\u7684 service \\u90E8\\u7F72\\u4E0A\\u7EBF\\u4E86\\u3002\"), mdx(\"h2\", {\n    \"id\": \"安装-ingress-controller\"\n  }, \"\\u5B89\\u88C5 Ingress Controller\"), mdx(\"p\", null, \"LoadBalancer \\u662F\\u6700\\u5E38\\u7528\\u7684 service \\u7C7B\\u578B\\uFF0C\\u4F46\\u5927\\u91CF ip \\u7BA1\\u7406\\u8D77\\u6765\\u8FD8\\u662F\\u6BD4\\u8F83\\u9EBB\\u70E6\\u3002\\u4ECE k8s 1.1 \\u5F00\\u59CB\\u65B0\\u52A0\\u5165\\u4E86\\u4E00\\u4E2A\\u8D44\\u6E90\\u7C7B\\u578B Ingress\\u3002\\u5176\\u4F5C\\u7528\\u7C7B\\u4F3C\\u4E8E Apache \\u6216\\u8005 Nginx\\uFF0C\\u53EF\\u4EE5\\u5BF9\\u5165\\u7AD9\\u6D41\\u91CF\\u8FDB\\u884C\\u66F4\\u7075\\u6D3B\\u7684\\u63A7\\u5236\\uFF0C\\u4EE5\\u8FBE\\u5230\\u7B80\\u5316\\u7EF4\\u62A4\\u7684\\u76EE\\u7684\\u3002\"), mdx(\"p\", null, \"Ingress \\u7684\\u4E00\\u4E2A\\u5F88\\u6709\\u7528\\u7684\\u529F\\u80FD\\u662F\\u6839\\u636E\\u57DF\\u540D\\u5F15\\u5BFC\\u5165\\u7AD9\\u6D41\\u91CF\\u3002\\u6BD4\\u5982\\u73B0\\u6709 2 \\u4E2A\\u57DF\\u540D\\uFF0Caaa.com \\u548C bbb.com\\uFF0C\\u5206\\u522B\\u5BF9\\u5E94 a \\u670D\\u52A1\\u5668\\u548C b \\u670D\\u52A1\\u5668\\u3002\\u7ECF\\u8FC7 DNS \\u89E3\\u6790\\u540E\\u4E24\\u4E2A\\u57DF\\u540D\\u90FD\\u6307\\u5411\\u540C\\u4E00\\u4E2A ip \\u5730\\u5740\\uFF0C\\u5373 Ingress \\u6240\\u5728 node \\u7684 ip\\u3002\\u5F53\\u6709\\u4EBA\\u8BBF\\u95EE aaa.com \\u7684\\u65F6\\u5019\\uFF0CIngress \\u5C31\\u80FD\\u5C06\\u6D41\\u91CF\\u5F15\\u5BFC\\u81F3 a \\u670D\\u52A1\\u5668\\uFF0C\\u5BF9 b \\u670D\\u52A1\\u5668\\u4E5F\\u662F\\u540C\\u7406\\u3002\"), mdx(\"p\", null, \"\\u60F3\\u8981\\u4F7F\\u7528 Ingress\\uFF0C\\u5C31\\u5FC5\\u987B\\u5B89\\u88C5 Ingress Controller\\u3002\"), mdx(\"p\", null, \"\\u6211\\u9009\\u62E9 Nginx-Ingress\\u3002\\u5148 clone \\u914D\\u7F6E\\u6587\\u4EF6\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone https://github.com/nginxinc/kubernetes-ingress/ --single-branch --branch v1.6.3\\n\")), mdx(\"p\", null, \"\\u7136\\u540E cd \\u5230 deployments \\u5B50\\u76EE\\u5F55\\uFF0C\\u4F9D\\u6B21\\u8FDB\\u884C\\u4E0B\\u9762\\u7684\\u64CD\\u4F5C\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"kubectl apply -f common/ns-and-sa.yaml\\nkubectl apply -f rbac/rbac.yaml\\nkubectl apply -f common/default-server-secret.yaml\\nkubectl apply -f common/nginx-config.yaml\\nkubectl apply -f common/custom-resource-definitions.yaml\\nkubectl apply -f daemon-set/nginx-ingress.yaml\\n\")), mdx(\"p\", null, \"\\u73B0\\u5728\\u901A\\u8FC7\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ kubectl get pods --namespace=nginx-ingress\"), \"\\u786E\\u8BA4 nginx-ingress \\u662F\\u5426\\u6B63\\u5E38\\u5728\\u7EBF\\u3002\"), mdx(\"h1\", {\n    \"id\": \"结语\"\n  }, \"\\u7ED3\\u8BED\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u5982\\u679C\\u4E00\\u5207\\u64CD\\u4F5C\\u6B63\\u786E\\uFF0C\\u5355 node \\u7684 k8s \\u96C6\\u7FA4\\u5DF2\\u7ECF\\u53EF\\u4EE5\\u6B63\\u5E38\\u4F7F\\u7528\\uFF0C\\u5E76\\u4E14\\u652F\\u6301\\u6700\\u65B0 k8s 1.18 \\u7684\\u6240\\u6709\\u7279\\u6027\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"场景","depth":1},{"value":"材料","depth":1},{"value":"过程","depth":1},{"value":"安装 OS","depth":2},{"value":"开启防火墙端口","depth":2},{"value":"开启网络桥接","depth":2},{"value":"安装 container 运行环境","depth":2},{"value":"安装 kubectl、kubelet、kubeadm","depth":2},{"value":"启动","depth":2},{"value":"配置 kubectl","depth":2},{"value":"安装网络插件","depth":2},{"value":"关闭 master 保护","depth":2},{"value":"安装 Load Balancer","depth":2},{"value":"安装 Ingress Controller","depth":2},{"value":"结语","depth":1}]}},"pageContext":{"locale":"cn","type":"post","title":"国内安装单node k8s集群","date":"2020-04-07T00:00:00.000Z","author":"onichandame"}}}